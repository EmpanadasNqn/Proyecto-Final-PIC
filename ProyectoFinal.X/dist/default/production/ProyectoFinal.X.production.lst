

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Oct 19 03:03:08 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  001A                     _RCREG	set	26
   206  0019                     _TXREG	set	25
   207  0039                     _RC1	set	57
   208  0038                     _RC0	set	56
   209  0065                     _RCIF	set	101
   210  00C4                     _CREN	set	196
   211  005F                     _GIE	set	95
   212  005E                     _PEIE	set	94
   213  00C7                     _SPEN	set	199
   214  0099                     _SPBRG	set	153
   215  0439                     _TRISC1	set	1081
   216  0438                     _TRISC0	set	1080
   217  04C1                     _TRMT	set	1217
   218  04C5                     _TXEN	set	1221
   219  0465                     _RCIE	set	1125
   220  04C4                     _SYNC	set	1220
   221  04C2                     _BRGH	set	1218
   222  043F                     _TRISC7	set	1087
   223  043E                     _TRISC6	set	1086
   224  0C3B                     _BRG16	set	3131
   225                           
   226                           	psect	cinit
   227  07FA                     start_initialization:	
   228                           ; #config settings
   229                           
   230  07FA                     __initialization:
   231                           
   232                           ; Clear objects allocated to COMMON
   233  07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   234  07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   235  07FC                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  07FC                     __end_of__initialization:
   239  07FC  0183               	clrf	3
   240  07FD  120A  118A  2FC6   	ljmp	_main	;jump to C main() function
   241                           
   242                           	psect	bssCOMMON
   243  0070                     __pbssCOMMON:
   244  0070                     _datos:
   245  0070                     	ds	2
   246                           
   247                           	psect	cstackCOMMON
   248  0072                     __pcstackCOMMON:
   249  0072                     ?_iniUART_RX:
   250  0072                     ??_iniUART_RX:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0072                     ?_ISR:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0072                     ??_ISR:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0072                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0072                     	ds	2
   265  0074                     ??_main:
   266                           
   267                           	psect	maintext
   268  07C6                     __pmaintext:	
   269                           ; 1 bytes @ 0x2
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 106 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          0       0       0       0       0
   292 ;;      Totals:         0       0       0       0       0
   293 ;;Total ram usage:        0 bytes
   294 ;; Hardware stack levels required when called: 1
   295 ;; This function calls:
   296 ;;		_ISR
   297 ;;		_iniUART_RX
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303  07C6                     _main:	
   304                           ;psect for function _main
   305                           
   306  07C6                     l712:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   309                           
   310                           
   311                           ;main.c: 108:     iniUART_RX();
   312  07C6  120A  118A  27AD  120A  118A  	fcall	_iniUART_RX
   313  07CB                     l714:
   314                           
   315                           ;main.c: 110:     TRISC0 = 0;
   316  07CB  1683               	bsf	3,5	;RP0=1, select bank1
   317  07CC  1303               	bcf	3,6	;RP1=0, select bank1
   318  07CD  1007               	bcf	7,0	;volatile
   319  07CE                     l716:
   320                           
   321                           ;main.c: 111:     TRISC1 = 0;
   322  07CE  1087               	bcf	7,1	;volatile
   323  07CF                     l718:
   324                           
   325                           ;main.c: 112:     RC0 = 0;
   326  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   327  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   328  07D1  1007               	bcf	7,0	;volatile
   329  07D2                     l720:
   330                           
   331                           ;main.c: 113:     RC1 = 0;
   332  07D2  1087               	bcf	7,1	;volatile
   333                           
   334                           ;main.c: 115:     ISR();
   335  07D3  120A  118A  279E  120A  118A  	fcall	_ISR
   336  07D8                     l722:
   337                           
   338                           ;main.c: 116:     if (datos == 49) {RC0 = 1;}
   339  07D8  3031               	movlw	49
   340  07D9  0670               	xorwf	_datos,w
   341  07DA  0471               	iorwf	_datos+1,w
   342  07DB  1D03               	btfss	3,2
   343  07DC  2FDE               	goto	u51
   344  07DD  2FDF               	goto	u50
   345  07DE                     u51:
   346  07DE  2FE2               	goto	l726
   347  07DF                     u50:
   348  07DF                     l724:
   349  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   350  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   351  07E1  1407               	bsf	7,0	;volatile
   352  07E2                     l726:
   353                           
   354                           ;main.c: 117:     if (datos == 50) {RC0 = 0;}
   355  07E2  3032               	movlw	50
   356  07E3  0670               	xorwf	_datos,w
   357  07E4  0471               	iorwf	_datos+1,w
   358  07E5  1D03               	btfss	3,2
   359  07E6  2FE8               	goto	u61
   360  07E7  2FE9               	goto	u60
   361  07E8                     u61:
   362  07E8  2FEC               	goto	l730
   363  07E9                     u60:
   364  07E9                     l728:
   365  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   366  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   367  07EB  1007               	bcf	7,0	;volatile
   368  07EC                     l730:
   369                           
   370                           ;main.c: 118:     if (datos == 51) {RC1 = ~RC1;}
   371  07EC  3033               	movlw	51
   372  07ED  0670               	xorwf	_datos,w
   373  07EE  0471               	iorwf	_datos+1,w
   374  07EF  1D03               	btfss	3,2
   375  07F0  2FF2               	goto	u71
   376  07F1  2FF3               	goto	u70
   377  07F2                     u71:
   378  07F2  2FF7               	goto	l74
   379  07F3                     u70:
   380  07F3                     l732:
   381  07F3  3002               	movlw	2
   382  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   383  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   384  07F6  0687               	xorwf	7,f
   385  07F7                     l74:
   386  07F7  120A  118A  2800   	ljmp	start
   387  07FA                     __end_of_main:
   388                           
   389                           	psect	text1
   390  07AD                     __ptext1:	
   391 ;; *************** function _iniUART_RX *****************
   392 ;; Defined at:
   393 ;;		line 53 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420  07AD                     _iniUART_RX:	
   421                           ;psect for function _iniUART_RX
   422                           
   423  07AD                     l666:	
   424                           ;incstack = 0
   425                           ; Regs used in _iniUART_RX: [wreg]
   426                           
   427                           
   428                           ;main.c: 56:     TRISC6 = 1;
   429  07AD  1683               	bsf	3,5	;RP0=1, select bank1
   430  07AE  1303               	bcf	3,6	;RP1=0, select bank1
   431  07AF  1707               	bsf	7,6	;volatile
   432                           
   433                           ;main.c: 57:     TRISC7 = 0;
   434  07B0  1387               	bcf	7,7	;volatile
   435                           
   436                           ;main.c: 60:     BRGH = 1;
   437  07B1  1518               	bsf	24,2	;volatile
   438                           
   439                           ;main.c: 61:     BRG16 = 0;
   440  07B2  1683               	bsf	3,5	;RP0=1, select bank3
   441  07B3  1703               	bsf	3,6	;RP1=1, select bank3
   442  07B4  1187               	bcf	7,3	;volatile
   443                           
   444                           ;main.c: 62:     SYNC = 0;
   445  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   446  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   447  07B7  1218               	bcf	24,4	;volatile
   448  07B8                     l668:
   449                           
   450                           ;main.c: 65:     SPBRG = 25;
   451  07B8  3019               	movlw	25
   452  07B9  0099               	movwf	25	;volatile
   453  07BA                     l670:
   454                           
   455                           ;main.c: 68:     SPEN = 1;
   456  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   457  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   458  07BC  1798               	bsf	24,7	;volatile
   459  07BD                     l672:
   460                           
   461                           ;main.c: 71:     RCIE = 1;
   462  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   463  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   464  07BF  168C               	bsf	12,5	;volatile
   465  07C0                     l674:
   466                           
   467                           ;main.c: 72:     PEIE = 1;
   468  07C0  170B               	bsf	11,6	;volatile
   469  07C1                     l676:
   470                           
   471                           ;main.c: 73:     GIE = 1;
   472  07C1  178B               	bsf	11,7	;volatile
   473  07C2                     l678:
   474                           
   475                           ;main.c: 75:     CREN = 1;
   476  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   477  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   478  07C4  1618               	bsf	24,4	;volatile
   479  07C5                     l48:
   480  07C5  0008               	return
   481  07C6                     __end_of_iniUART_RX:
   482                           
   483                           	psect	text2
   484  079E                     __ptext2:	
   485 ;; *************** function _ISR *****************
   486 ;; Defined at:
   487 ;;		line 98 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   501 ;;      Params:         0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0
   503 ;;      Temps:          2       0       0       0       0
   504 ;;      Totals:         2       0       0       0       0
   505 ;;Total ram usage:        2 bytes
   506 ;; Hardware stack levels used: 1
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514  079E                     _ISR:	
   515                           ;psect for function _ISR
   516                           
   517  079E                     l680:	
   518                           ;incstack = 0
   519                           ; Regs used in _ISR: [wreg]
   520                           
   521                           
   522                           ;main.c: 100:     if (RCIF == 1) {
   523  079E  1283               	bcf	3,5	;RP0=0, select bank0
   524  079F  1303               	bcf	3,6	;RP1=0, select bank0
   525  07A0  1E8C               	btfss	12,5	;volatile
   526  07A1  2FA3               	goto	u11
   527  07A2  2FA4               	goto	u10
   528  07A3                     u11:
   529  07A3  2FAC               	goto	l66
   530  07A4                     u10:
   531  07A4                     l682:
   532                           
   533                           ;main.c: 101:         datos = RCREG;
   534  07A4  081A               	movf	26,w	;volatile
   535  07A5  00F2               	movwf	??_ISR
   536  07A6  01F3               	clrf	??_ISR+1
   537  07A7  0872               	movf	??_ISR,w
   538  07A8  00F0               	movwf	_datos
   539  07A9  0873               	movf	??_ISR+1,w
   540  07AA  00F1               	movwf	_datos+1
   541  07AB                     l684:
   542                           
   543                           ;main.c: 102:         RCIF = 0;
   544  07AB  128C               	bcf	12,5	;volatile
   545  07AC                     l66:
   546  07AC  0008               	return
   547  07AD                     __end_of_ISR:
   548  007E                     btemp	set	126	;btemp
   549  007E                     wtemp0	set	126
   550                           
   551                           	psect	idloc
   552                           
   553                           ;Config register IDLOC0 @ 0x2000
   554                           ;	unspecified, using default values
   555  2000                     	org	8192
   556  2000  3FFF               	dw	16383
   557                           
   558                           ;Config register IDLOC1 @ 0x2001
   559                           ;	unspecified, using default values
   560  2001                     	org	8193
   561  2001  3FFF               	dw	16383
   562                           
   563                           ;Config register IDLOC2 @ 0x2002
   564                           ;	unspecified, using default values
   565  2002                     	org	8194
   566  2002  3FFF               	dw	16383
   567                           
   568                           ;Config register IDLOC3 @ 0x2003
   569                           ;	unspecified, using default values
   570  2003                     	org	8195
   571  2003  3FFF               	dw	16383
   572                           
   573                           	psect	config
   574                           
   575                           ;Config register CONFIG1 @ 0x2007
   576                           ;	Oscillator Selection bits
   577                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   578                           ;	Watchdog Timer Enable bit
   579                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   580                           ;	Power-up Timer Enable bit
   581                           ;	PWRTE = ON, PWRT enabled
   582                           ;	RE3/MCLR pin function select bit
   583                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   584                           ;	Code Protection bit
   585                           ;	CP = OFF, Program memory code protection is disabled
   586                           ;	Data Code Protection bit
   587                           ;	CPD = OFF, Data memory code protection is disabled
   588                           ;	Brown Out Reset Selection bits
   589                           ;	BOREN = ON, BOR enabled
   590                           ;	Internal External Switchover bit
   591                           ;	IESO = ON, Internal/External Switchover mode is enabled
   592                           ;	Fail-Safe Clock Monitor Enabled bit
   593                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   594                           ;	Low Voltage Programming Enable bit
   595                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   596                           ;	In-Circuit Debugger Mode bit
   597                           ;	DEBUG = 0x1, unprogrammed default
   598  2007                     	org	8199
   599  2007  2FE4               	dw	12260
   600                           
   601                           ;Config register CONFIG2 @ 0x2008
   602                           ;	Brown-out Reset Selection bit
   603                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   604                           ;	Flash Program Memory Self Write Enable bits
   605                           ;	WRT = OFF, Write protection off
   606  2008                     	org	8200
   607  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _ISR
                         _iniUART_RX
 ---------------------------------------------------------------------------------
 (1) _iniUART_RX                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ISR
   _iniUART_RX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Oct 19 03:03:08 2022

                     l48 07C5                       l66 07AC                       l74 07F7  
                     u10 07A4                       u11 07A3                       u50 07DF  
                     u51 07DE                       u60 07E9                       u61 07E8  
                     u70 07F3                       u71 07F2                      l720 07D2  
                    l712 07C6                      l730 07EC                      l722 07D8  
                    l714 07CB                      l732 07F3                      l724 07DF  
                    l716 07CE                      l670 07BA                      l726 07E2  
                    l718 07CF                      l680 079E                      l672 07BD  
                    l728 07E9                      l682 07A4                      l674 07C0  
                    l666 07AD                      l684 07AB                      l676 07C1  
                    l668 07B8                      l678 07C2                      _GIE 005F  
                    _RC0 0038                      _RC1 0039                      _ISR 079E  
                   ?_ISR 0072                     _BRGH 04C2                     _CREN 00C4  
                   _PEIE 005E                     _RCIE 0465                     _RCIF 0065  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 07C6                     btemp 007E  
                   start 0000                    ??_ISR 0072                    ?_main 0072  
                  _BRG16 0C3B                    _RCREG 001A                    _SPBRG 0099  
                  _TXREG 0019                    _datos 0070                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0074                   _TRISC0 0438                   _TRISC1 0439  
                 _TRISC6 043E                   _TRISC7 043F  __end_of__initialization 07FC  
         __pcstackCOMMON 0072               __pmaintext 07C6               _iniUART_RX 07AD  
                __ptext1 07AD                  __ptext2 079E     end_of_initialization 07FC  
            ?_iniUART_RX 0072      start_initialization 07FA              __end_of_ISR 07AD  
            __pbssCOMMON 0070                ___latbits 0002             ??_iniUART_RX 0072  
     __end_of_iniUART_RX 07C6  
